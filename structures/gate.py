gates_truth_tables = {
    'buffer': {(0,):0, (1,):1},
    'inverter': {(0,):1, (1,):0},
    'and2': {(0,0):0, (0,1):0, (1,0):0, (1,1):1},
    'nand2': {(0,0):1, (0,1):1, (1,0):1, (1,1):0},
    'and3': {(0,0,0):0, (0,0,1):0, (0,1,0):0, (0,1,1):0, (1,0,0):0, (1,0,1):0, (1,1,0):0, (1,1,1):1},
    'nand3': {(0,0,0):1, (0,0,1):1, (0,1,0):1, (0,1,1):1, (1,0,0):1, (1,0,1):1, (1,1,0):1, (1,1,1):0},
    'and4': {(0,0,0,0):0, (0,0,0,1):0, (0,0,1,0):0, (0,0,1,1):0, (0,1,0,0):0, (0,1,0,1):0, (0,1,1,0):0, (0,1,1,1):0,
             (1,0,0,0):0, (1,0,0,1):0, (1,0,1,0):0, (1,0,1,1):0, (1,1,0,0):0, (1,1,0,1):0, (1,1,1,0):0, (1,1,1,1):1},
    'nand4': {(0,0,0,0):1, (0,0,0,1):1, (0,0,1,0):1, (0,0,1,1):1, (0,1,0,0):1, (0,1,0,1):1, (0,1,1,0):1, (0,1,1,1):1,
              (1,0,0,0):1, (1,0,0,1):1, (1,0,1,0):1, (1,0,1,1):1, (1,1,0,0):1, (1,1,0,1):1, (1,1,1,0):1, (1,1,1,1):0},
    'and5': {(0,0,0,0,0):0, (0,0,0,0,1):0, (0,0,0,1,0):0, (0,0,0,1,1):0, (0,0,1,0,0):0, (0,0,1,0,1):0, (0,0,1,1,0):0, (0,0,1,1,1):0,
             (0,1,0,0,0):0, (0,1,0,0,1):0, (0,1,0,1,0):0, (0,1,0,1,1):0, (0,1,1,0,0):0, (0,1,1,0,1):0, (0,1,1,1,0):0, (0,1,1,1,1):0,
             (1,0,0,0,0):0, (1,0,0,0,1):0, (1,0,0,1,0):0, (1,0,0,1,1):0, (1,0,1,0,0):0, (1,0,1,0,1):0, (1,0,1,1,0):0, (1,0,1,1,1):0,
             (1,1,0,0,0):0, (1,1,0,0,1):0, (1,1,0,1,0):0, (1,1,0,1,1):0, (1,1,1,0,0):0, (1,1,1,0,1):0, (1,1,1,1,0):0, (1,1,1,1,1):1},
    'nand5': {(0,0,0,0,0):1, (0,0,0,0,1):1, (0,0,0,1,0):1, (0,0,0,1,1):1, (0,0,1,0,0):1, (0,0,1,0,1):1, (0,0,1,1,0):1, (0,0,1,1,1):1,
             (0,1,0,0,0):1, (0,1,0,0,1):1, (0,1,0,1,0):1, (0,1,0,1,1):1, (0,1,1,0,0):1, (0,1,1,0,1):1, (0,1,1,1,0):1, (0,1,1,1,1):1,
             (1,0,0,0,0):1, (1,0,0,0,1):1, (1,0,0,1,0):1, (1,0,0,1,1):1, (1,0,1,0,0):1, (1,0,1,0,1):1, (1,0,1,1,0):1, (1,0,1,1,1):1,
             (1,1,0,0,0):1, (1,1,0,0,1):1, (1,1,0,1,0):1, (1,1,0,1,1):1, (1,1,1,0,0):1, (1,1,1,0,1):1, (1,1,1,1,0):1, (1,1,1,1,1):0},
    'or2': {(0,0):0, (0,1):1, (1,0):1, (1,1):1},
    'nor2': {(0,0):1, (0,1):0, (1,0):0, (1,1):0},
    'or3': {(0,0,0):0, (0,0,1):1, (0,1,0):1, (0,1,1):1, (1,0,0):1, (1,0,1):1, (1,1,0):1, (1,1,1):1},
    'nor3': {(0,0,0):1, (0,0,1):0, (0,1,0):0, (0,1,1):0, (1,0,0):0, (1,0,1):0, (1,1,0):0, (1,1,1):0},
    'or4': {(0,0,0,0):0, (0,0,0,1):1, (0,0,1,0):1, (0,0,1,1):1, (0,1,0,0):1, (0,1,0,1):1, (0,1,1,0):1, (0,1,1,1):1, (1,0,0,0):1, (1,0,0,1):1, (1,0,1,0):1, (1,0,1,1):1, (1,1,0,0):1, (1,1,0,1):1, (1,1,1,0):1, (1,1,1,1):1},
    'nor4': {(0,0,0,0):1, (0,0,0,1):0, (0,0,1,0):0, (0,0,1,1):0, (0,1,0,0):0, (0,1,0,1):0, (0,1,1,0):0, (0,1,1,1):0, (1,0,0,0):0, (1,0,0,1):0, (1,0,1,0):0, (1,0,1,1):0, (1,1,0,0):0, (1,1,0,1):0, (1,1,1,0):0, (1,1,1,1):0},
    'or5': {(0,0,0,0,0):0, (0,0,0,0,1):1, (0,0,0,1,0):1, (0,0,0,1,1):1, (0,0,1,0,0):1, (0,0,1,0,1):1, (0,0,1,1,0):1, (0,0,1,1,1):1,
             (0,1,0,0,0):1, (0,1,0,0,1):1, (0,1,0,1,0):1, (0,1,0,1,1):1, (0,1,1,0,0):1, (0,1,1,0,1):1, (0,1,1,1,0):1, (0,1,1,1,1):1,
             (1,0,0,0,0):1, (1,0,0,0,1):1, (1,0,0,1,0):1, (1,0,0,1,1):1, (1,0,1,0,0):1, (1,0,1,0,1):1, (1,0,1,1,0):1, (1,0,1,1,1):1,
             (1,1,0,0,0):1, (1,1,0,0,1):1, (1,1,0,1,0):1, (1,1,0,1,1):1, (1,1,1,0,0):1, (1,1,1,0,1):1, (1,1,1,1,0):1, (1,1,1,1,1):1},
    'nor5': {(0,0,0,0,0):1, (0,0,0,0,1):0, (0,0,0,1,0):0, (0,0,0,1,1):0, (0,0,1,0,0):0, (0,0,1,0,1):0, (0,0,1,1,0):0, (0,0,1,1,1):0,
             (0,1,0,0,0):0, (0,1,0,0,1):0, (0,1,0,1,0):0, (0,1,0,1,1):0, (0,1,1,0,0):0, (0,1,1,0,1):0, (0,1,1,1,0):0, (0,1,1,1,1):0,
             (1,0,0,0,0):0, (1,0,0,0,1):0, (1,0,0,1,0):0, (1,0,0,1,1):0, (1,0,1,0,0):0, (1,0,1,0,1):0, (1,0,1,1,0):0, (1,0,1,1,1):0,
             (1,1,0,0,0):0, (1,1,0,0,1):0, (1,1,0,1,0):0, (1,1,0,1,1):0, (1,1,1,0,0):0, (1,1,1,0,1):0, (1,1,1,1,0):0, (1,1,1,1,1):0},
    'xor2': {(0,0):0, (0,1):1, (1,0):1, (1,1):0},
    'xnor2': {(0,0):1, (0,1):0, (1,0):0, (1,1):1},
    'xor3': {(0,0,0):0, (0,0,1):1, (0,1,0):1, (0,1,1):0, (1,0,0):1, (1,0,1):0, (1,1,0):0, (1,1,1):1},
    'xnor3': {(0,0,0):1, (0,0,1):0, (0,1,0):0, (0,1,1):1, (1,0,0):0, (1,0,1):1, (1,1,0):1, (1,1,1):0},
    'xor4': {(0,0,0,0):0, (0,0,0,1):1, (0,0,1,0):1, (0,0,1,1):0, (0,1,0,0):1, (0,1,0,1):0, (0,1,1,0):0, (0,1,1,1):1, (1,0,0,0):1, (1,0,0,1):0, (1,0,1,0):0, (1,0,1,1):1, (1,1,0,0):0, (1,1,0,1):1, (1,1,1,0):1, (1,1,1,1):0},
    'xnor4': {(0,0,0,0):1, (0,0,0,1):0, (0,0,1,0):0, (0,0,1,1):1, (0,1,0,0):0, (0,1,0,1):1, (0,1,1,0):1, (0,1,1,1):0, (1,0,0,0):0, (1,0,0,1):1, (1,0,1,0):1, (1,0,1,1):0, (1,1,0,0):1, (1,1,0,1):0, (1,1,1,0):0, (1,1,1,1):1}
}

def and_func(*inputs):
    return 1 if all(input == 1 for input in inputs) else 0

def nand_func(*inputs):
    return 1 - and_func(*inputs)

def or_func(*inputs):
    return 1 if any(input == 1 for input in inputs) else 0

def nor_func(*inputs):
    return 1 - or_func(*inputs)

def xor_func(*inputs):
    return inputs.count(1) & 1

def xnor_func(*inputs):
    return 1 - xor_func(*inputs)

gates_func = {
    'and': and_func,
    'nand': nand_func,
    'or': or_func,
    'nor': nor_func,
    'xor': xor_func,
    'xnor': xnor_func
}

class Gate:

    def __init__(self, type, name, output, inputs):
        self.type = type
        if type in gates_truth_tables:
            self.truth_table = gates_truth_tables[type]
        else:
            self.truth_table = gates_func[type[:-1]]
        self.name = name
        self.output = output
        self.inputs = inputs
        self.healthy = True

    def calc_output(self, values_dic):
        val = self.truth_table[tuple(values_dic[input] for input in self.inputs)]
        values_dic[self.output] = val if self.healthy else 1 - val

    def __repr__(self):
        # return f'{self.type.capitalize()} gate "{self.name}": inputs: {self.inputs}, output: {self.output}, healthy: {self.healthy}'
        return self.name

    def __lt__(self, other):
        return self.name < other.name